
name: BuildRelease

on:
  push:
    branches: [ master ]

jobs:

  buildWindowsRelease:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: 'true'
    - uses: actions/setup-node@master
      with:
        # fix till https://github.com/actions/setup-node/issues/121 is solved
        node-version: 12.16.1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'

    - run: node -p "require('./package').version" > get_Version.txt
    - uses: pCYSl5EDgo/cat@master
      id: getVersion
      with:
        path: get_Version.txt
        trim: true

    - run: yarn install
    - run: yarn run checkStyle
    - run: yarn run build
      env:
          CSC_KEY_PASSWORD: ${{ secrets.Windows_CERTS_PASSWORD }}
          CSC_LINK: ${{ secrets.Windows_CERTS }}

    - name: Upload latest-mac.yml
      uses: actions/upload-artifact@v2
      with:
        name: latest.yml
        path: dist_electron/latest.yml

    - name: Upload exe
      uses: actions/upload-artifact@v2
      with:
        name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe
        path: dist_electron/GuidingWallet ${{ steps.getVersion.outputs.text }}.exe

    - name: Upload exe.blockmap
      uses: actions/upload-artifact@v2
      with:
        name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe.blockmap
        path: dist_electron/GuidingWallet ${{ steps.getVersion.outputs.text }}.exe.blockmap

  buildMacRelease:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: 'true'
    - uses: actions/setup-node@master
      with:
        #
        # fix till https://github.com/actions/setup-node/issues/121 is solved
        node-version: 12.16.1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - run: node -p "require('./package').version" > get_Version.txt
    - uses: pCYSl5EDgo/cat@master
      id: getVersion
      with:
        path: get_Version.txt
        trim: true

    - run: yarn install
    - run: yarn run checkStyle
    - run: yarn run build
      env:
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
          CSC_LINK: ${{ secrets.MAC_CERTS }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}

    - name: Upload latest-mac.yml
      uses: actions/upload-artifact@v2
      with:
        name: latest-mac.yml
        path: dist_electron/latest-mac.yml

    - name: Upload mac.zip
      uses: actions/upload-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}-mac.zip
        path: dist_electron/GuidingWallet-${{ steps.getVersion.outputs.text }}-mac.zip

    - name: Upload mac dmg
      uses: actions/upload-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg
        path: dist_electron/GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg

    - name: Upload dmg.blockmap
      uses: actions/upload-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg.blockmap
        path: dist_electron/GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg.blockmap

  createRelease:
    needs: [buildMacRelease, buildWindowsRelease]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: 'false'
    - run: node -p "require('./package').version" > get_Version.txt
    - uses: pCYSl5EDgo/cat@master
      id: getVersion
      with:
        path: get_Version.txt
        trim: true

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.getVersion.outputs.text }}
        release_name: Release ${{ steps.getVersion.outputs.text }}
        body: |
          Add Release Notes
        draft: true
        prerelease: false

    - name: Download latest.yml
      uses: actions/download-artifact@v2
      with:
        name: latest.yml
    - name: Download latest-mac.yml
      uses: actions/download-artifact@v2
      with:
        name: latest-mac.yml

    - name: Download exe
      uses: actions/download-artifact@v2
      with:
        name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe

    - name: Download exe.blockmap
      uses: actions/download-artifact@v2
      with:
        name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe.blockmap

    - name: Download mac.zip
      uses: actions/download-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}-mac.zip

    - name: Download mac dmg
      uses: actions/download-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg

    - name: Download dmg.blockmap
      uses: actions/download-artifact@v2
      with:
        name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg.blockmap

    - run: ls

    - name: Upload latest.yml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: latest.yml
        asset_name: latest.yml
        asset_content_type: application/octet-stream

    - name: Upload exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe
        asset_name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe

    - name: Upload exe.blockmap
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe.blockmap
        asset_name: GuidingWallet ${{ steps.getVersion.outputs.text }}.exe.blockmap
        asset_content_type: application/octet-stream

    - name: Upload Mac latest-mac.yml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: latest-mac.yml
        asset_name: latest-mac.yml
        asset_content_type: application/octet-stream

    - name: Upload Mac dmg
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg
        asset_name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload mac.zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: GuidingWallet-${{ steps.getVersion.outputs.text }}-mac.zip
        asset_name: GuidingWallet-${{ steps.getVersion.outputs.text }}-mac.zip
        asset_content_type: application/octet-stream

    - name: Upload dmg.blockmap
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg.blockmap
        asset_name: GuidingWallet-${{ steps.getVersion.outputs.text }}.dmg.blockmap
        asset_content_type: application/octet-stream

    # - name: Upload Release Windows Asset
    #   id: upload-release-asset-win
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: GuidingWallet Setup 0.1.0.exe
    #     asset_name: Windows-GuidingWallet.exe
    #     asset_content_type: application/octet-stream
